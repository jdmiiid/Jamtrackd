// // This file is "album_review.dart"
// // to compile these, run the following:
// // flutter pub run build_runner build --delete-conflicting-outputs
// // per: https://firebase.google.com/docs/firestore/manage-data/add-data#dart
// // per: https://pub.dev/packages/freezed
// import 'package:cloud_firestore/cloud_firestore.dart';
// import 'package:freezed_annotation/freezed_annotation.dart';
// import 'package:riverpod_annotation/riverpod_annotation.dart';

// // required: associates our `album_review.dart` with the code generated by Freezed
// part 'album_review.freezed.dart';

// // optional: Since our AlbumReview class is serializable, we must add this line.
// // But if AlbumReview was not serializable, we could skip it.
// part 'album_review.g.dart';

// @freezed
// class AlbumReview with _$AlbumReview {
//   const AlbumReview._();

//   factory AlbumReview({
//     required String id,
//     required String url,
//     required String artistName,
//     required double rating,
//     required String response,
//     required String? releaseDate,
//     required List<String>? tracks,
//   }) = _AlbumReview;

//   factory AlbumReview.fromJson(json) => _$AlbumReviewFromJson(json);

//   factory AlbumReview.fromFirestore(documentSnapshot, shapshotOptions) =>
//       AlbumReview.fromJson(documentSnapshot.data()!);

//   static Map<String, Object?> toFirestore(albumReview, setOptions) =>
//       albumReview.toJson();

//   // this returns a docId without writing anything to the database yet
//   // later, we can use this id to write to the database with the next call:
//   // createFirestoreDoc
//   static String autoGeneratedDocId() {
//     return FirebaseFirestore.instance.collection('albumReview').doc().id;
//   }

//   // if docId is null, the doc is created with an auto-generated docId
//   // if docId is NOT null, the doc is created with the specified docId
//   static Future createFirestoreDocNCollection({
//     required String? docId,
//     required String? albumName,
//     required AlbumReview albumReview,
//   }) async {
//     final firestoreCollection = FirebaseFirestore.instance
//         .collection('users')
//         .doc(docId)
//         .collection('album_ratings')
//         .withConverter<AlbumReview>(
//           fromFirestore: AlbumReview.fromFirestore,
//           toFirestore: AlbumReview.toFirestore,
//         );
//     await firestoreCollection.doc(albumName).set(albumReview);
//   }

//   // READ COLLECTION
//   @riverpod
//   Future<List<QueryDocumentSnapshot<Map<String, dynamic>>>>
//       readFirestoreCollection(ReadFirestoreRef ref,
//           {required String userEmail}) async {
//     final firestoreCollection =
//         FirebaseFirestore.instance.collection('users').doc(userEmail);
//     return await firestoreCollection.collection('album_ratings').get().then(
//       (querySnapshot) {
//         return querySnapshot.docs.toList();
//       },
//       onError: (e) => print("Error completing: $e"),
//     );
//   }

//   // READ DOCUMENT
//   static Future<DocumentSnapshot<AlbumReview>> readFirestoreDoc(
//       {required String docId}) async {
//     final firestoreCollection = FirebaseFirestore.instance
//         .collection('users')
//         .doc('jdmiiidev@gmail.com')
//         .collection('album_ratings')
//         .withConverter<AlbumReview>(
//           fromFirestore: AlbumReview.fromFirestore,
//           toFirestore: AlbumReview.toFirestore,
//         );
//     return await firestoreCollection.doc(docId).get();
//   }

//   // UPDATE
//   static Future<DocumentReference<AlbumReview>> updateFirestoreDoc(
//       {required String docId, required AlbumReview albumReview}) async {
//     final firestoreCollection = FirebaseFirestore.instance
//         .collection('albumReview')
//         .withConverter<AlbumReview>(
//           fromFirestore: AlbumReview.fromFirestore,
//           toFirestore: AlbumReview.toFirestore,
//         );
//     await firestoreCollection.doc(docId).update(albumReview.toJson());
//     return firestoreCollection.doc(docId);
//   }
// }
